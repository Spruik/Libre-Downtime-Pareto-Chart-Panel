{"version":3,"sources":["../src/pie_chart_option.js"],"names":["getOption","data","myChart","categories","dp","getCategories","getCategoriesData","sortMax","console","log","categoriesValue","filterItems","xAxisCateogriesLabel","categoriesPercent","accumulatePercentages","leftYAxisMax","total","isDurationDataLoaded","leftYAxisMaxDuration","durationTotal","categoriesSortedByDur","categoriesValueDur","xAxisCateogriesLabelDur","categoriesPercentDur","option","tooltip","trigger","axisPointer","type","crossStyle","color","grid","top","toolbox","feature","myTool1","show","title","icon","onclick","legend","series","name","xAxis","isDurationMode","yAxis","max","setOption","myTool2","saveAsImage","right","nameLocation","nameGap","min","minInterval","axisLabel","formatter","splitLine","yAxisIndex","label","p","checkIsDurationMode","utils"],"mappings":";;;;;;AAKO,WAASA,SAAT,CAAoBC,IAApB,EAA0BC,OAA1B,EAAmC;;AAExC,QAAIC,aAAaC,GAAGC,aAAH,CAAiBJ,IAAjB,CAAjB;AACAE,iBAAaC,GAAGE,iBAAH,CAAqBH,UAArB,EAAiCF,IAAjC,CAAb;AACAE,iBAAaC,GAAGG,OAAH,CAAWJ,UAAX,EAAuB,OAAvB,CAAb;AACAK,YAAQC,GAAR,CAAYN,UAAZ;;AAGA,QAAMO,kBAAkBN,GAAGO,WAAH,CAAeR,UAAf,EAA2B,OAA3B,CAAxB;AACA,QAAMS,uBAAuBR,GAAGO,WAAH,CAAeR,UAAf,EAA2B,MAA3B,CAA7B;AACA,QAAIU,oBAAoBT,GAAGO,WAAH,CAAeR,UAAf,EAA2B,SAA3B,CAAxB;AACAU,wBAAoBT,GAAGU,qBAAH,CAAyBD,iBAAzB,CAApB;;AAEA,QAAME,eAAeZ,WAAW,CAAX,EAAca,KAAnC;;AAEA,QAAIC,uBAAuB,KAA3B;;AAEA;AACA,QAAIC,uBAAuBf,WAAW,CAAX,EAAcgB,aAAzC;AACA,QAAIC,8BAAJ;AACA,QAAIC,2BAAJ;AACA,QAAIC,gCAAJ;AACA,QAAIC,6BAAJ;;AAEA,QAAIC,SAAS;AACXC,eAAS;AACPC,iBAAS,MADF;AAEPC,qBAAa;AACXC,gBAAM,OADK;AAEXC,sBAAY;AACVC,mBAAO;AADG;AAFD;AAFN,OADE;AAUXC,YAAM;AACJC,aAAK;AADD,OAVK;AAaXC,eAAS;AACPC,iBAAS;AACPC,mBAAS;AACPC,kBAAM,KADC;AAEPC,mBAAO,MAFA;AAGPC,kBAAM,0FAHC;AAIPC,qBAAS,mBAAM;AACbf,qBAAOS,OAAP,CAAeC,OAAf,CAAuBC,OAAvB,CAA+BC,IAA/B,GAAsC,KAAtC;AACAZ,qBAAOgB,MAAP,CAAcvC,IAAd,CAAmB,CAAnB,IAAwB,YAAxB;AACAuB,qBAAOiB,MAAP,CAAc,CAAd,EAAiBC,IAAjB,GAAwB,YAAxB;AACAlB,qBAAOmB,KAAP,CAAa,CAAb,EAAgBD,IAAhB,GAAuB,EAAvB;AACA,kBAAI,CAACE,cAAL,EAAqB;AACnB;AACApB,uBAAOiB,MAAP,CAAc,CAAd,EAAiBxC,IAAjB,GAAwBS,eAAxB;AACAc,uBAAOmB,KAAP,CAAa,CAAb,EAAgB1C,IAAhB,GAAuBW,oBAAvB;AACAY,uBAAOiB,MAAP,CAAc,CAAd,EAAiBxC,IAAjB,GAAwBY,iBAAxB;AACAW,uBAAOqB,KAAP,CAAa,CAAb,EAAgBC,GAAhB,GAAsB/B,YAAtB;AACD,eAND,MAMM;AACJ;AACAS,uBAAOiB,MAAP,CAAc,CAAd,EAAiBxC,IAAjB,GAAwBoB,kBAAxB;AACAG,uBAAOmB,KAAP,CAAa,CAAb,EAAgB1C,IAAhB,GAAuBqB,uBAAvB;AACAE,uBAAOiB,MAAP,CAAc,CAAd,EAAiBxC,IAAjB,GAAwBsB,oBAAxB;AACAC,uBAAOqB,KAAP,CAAa,CAAb,EAAgBC,GAAhB,GAAsB5B,oBAAtB;AACD;;AAEDhB,sBAAQ6C,SAAR,CAAkBvB,MAAlB;AACD;AAxBM,WADF;AA2BPwB,mBAAS;AACPX,mBAAO,UADA;AAEPC,kBAAM,4FAFC;AAGPC,qBAAS,mBAAM;AACbf,qBAAOgB,MAAP,CAAcvC,IAAd,CAAmB,CAAnB,IAAwB,YAAxB;AACAuB,qBAAOiB,MAAP,CAAc,CAAd,EAAiBC,IAAjB,GAAwB,YAAxB;AACAlB,qBAAOmB,KAAP,CAAa,CAAb,EAAgBD,IAAhB,GAAuB,EAAvB;AACAlB,qBAAOS,OAAP,CAAeC,OAAf,CAAuBC,OAAvB,CAA+BC,IAA/B,GAAsC,KAAtC;;AAEA,kBAAI,CAACQ,cAAL,EAAqB;AACnBpB,uBAAOS,OAAP,CAAeC,OAAf,CAAuBc,OAAvB,CAA+BX,KAA/B,GAAuC,yBAAvC;AACAb,uBAAOqB,KAAP,CAAa,CAAb,EAAgBH,IAAhB,GAAuB,kBAAvB;;AAEA,oBAAI,CAACzB,oBAAL,EAA2B;AACzBG,0CAAwBhB,GAAGG,OAAH,CAAWJ,UAAX,EAAuB,UAAvB,CAAxB;AACAkB,uCAAqBjB,GAAGO,WAAH,CAAeS,qBAAf,EAAsC,UAAtC,CAArB;AACAE,4CAA0BlB,GAAGO,WAAH,CAAeS,qBAAf,EAAsC,MAAtC,CAA1B;AACAG,yCAAuBnB,GAAGO,WAAH,CAAeS,qBAAf,EAAsC,OAAtC,CAAvB;AACAG,yCAAuBnB,GAAGU,qBAAH,CAAyBS,oBAAzB,CAAvB;AACAN,yCAAuB,IAAvB;AACD;;AAEDO,uBAAOiB,MAAP,CAAc,CAAd,EAAiBxC,IAAjB,GAAwBoB,kBAAxB;AACAG,uBAAOmB,KAAP,CAAa,CAAb,EAAgB1C,IAAhB,GAAuBqB,uBAAvB;AACAE,uBAAOiB,MAAP,CAAc,CAAd,EAAiBxC,IAAjB,GAAwBsB,oBAAxB;AACAC,uBAAOqB,KAAP,CAAa,CAAb,EAAgBC,GAAhB,GAAsB5B,oBAAtB;;AAEA0B,iCAAiB,IAAjB;AACD,eAnBD,MAmBM;AACJpB,uBAAOS,OAAP,CAAeC,OAAf,CAAuBc,OAAvB,CAA+BX,KAA/B,GAAuC,UAAvC;AACAb,uBAAOqB,KAAP,CAAa,CAAb,EAAgBH,IAAhB,GAAuB,mBAAvB;;AAEAlB,uBAAOiB,MAAP,CAAc,CAAd,EAAiBxC,IAAjB,GAAwBS,eAAxB;AACAc,uBAAOmB,KAAP,CAAa,CAAb,EAAgB1C,IAAhB,GAAuBW,oBAAvB;AACAY,uBAAOiB,MAAP,CAAc,CAAd,EAAiBxC,IAAjB,GAAwBY,iBAAxB;AACAW,uBAAOqB,KAAP,CAAa,CAAb,EAAgBC,GAAhB,GAAsB/B,YAAtB;;AAEA6B,iCAAiB,KAAjB;AACD;;AAED1C,sBAAQ6C,SAAR,CAAkBvB,MAAlB;AACD;AAzCM,WA3BF;AAsEPyB,uBAAa;AACXb,kBAAM,IADK;AAEXC,mBAAO;AAFI;AAtEN,SADF;AA4EPa,eAAO;AA5EA,OAbE;AA2FXV,cAAQ;AACNvC,cAAM,CAAC,YAAD,EAAc,oBAAd;AADA,OA3FG;AA8FX0C,aAAO,CACL;AACEf,cAAM,UADR;AAEE3B,cAAMW,oBAFR;AAGEuC,sBAAc,QAHhB;AAIEC,iBAAS,EAJX;AAKEzB,qBAAa;AACXC,gBAAM;AADK;AALf,OADK,CA9FI;AAyGXiB,aAAO,CACL;AACEjB,cAAM,OADR;AAEEc,cAAM,mBAFR;AAGEW,aAAK,CAHP;AAIEP,aAAK/B,YAJP;AAKEuC,qBAAa,CALf;AAMEC,mBAAW;AACTC,qBAAW;AADF,SANb;AASEC,mBAAW;AACTrB,gBAAM;AADG;AATb,OADK,EAcL;AACER,cAAM,OADR;AAEEc,cAAM,SAFR;AAGEW,aAAK,CAHP;AAIEP,aAAK,GAJP;AAKE;AACAS,mBAAW;AACTC,qBAAW;AADF;AAGX;AACA;AACA;AAXF,OAdK,CAzGI;AAqIXf,cAAQ,CACN;AACEC,cAAM,YADR;AAEEd,cAAM,KAFR;AAGE3B,cAAMS;AAHR,OADM,EAMN;AACEgC,cAAM,oBADR;AAEEd,cAAM,MAFR;AAGE8B,oBAAY,CAHd;AAIEzD,cAAMY,iBAJR;AAKE8C,eAAO;AACLvB,gBAAM,IADD;AAELoB,qBAAW;AAAA,mBAAKI,EAAE3D,IAAF,KAAW,GAAX,GAAiB,EAAjB,GAAsB2D,EAAE3D,IAAF,GAAS,GAApC;AAAA;AAFN;AALT,OANM;AArIG,KAAb;;AAwJA,WAAOuB,MAAP;AACD;;uBAjLexB,S;;AAmLT,WAAS6D,mBAAT,GAA+B;AACpC,WAAOjB,cAAP;AACD;;iCAFeiB,mB;;;;AAxLJzD,Q;;AACA0D,W;;;AAERlB,oB,GAAiB,K","file":"pie_chart_option.js","sourcesContent":["import * as dp from './data_processor'\nimport * as utils from './utils'\n\nlet isDurationMode = false\n\nexport function getOption (data, myChart) {\n\n  let categories = dp.getCategories(data)\n  categories = dp.getCategoriesData(categories, data)\n  categories = dp.sortMax(categories, 'value')\n  console.log(categories);\n  \n\n  const categoriesValue = dp.filterItems(categories, 'value')\n  const xAxisCateogriesLabel = dp.filterItems(categories, 'name')\n  let categoriesPercent = dp.filterItems(categories, 'percent')\n  categoriesPercent = dp.accumulatePercentages(categoriesPercent)\n\n  const leftYAxisMax = categories[0].total\n  \n  let isDurationDataLoaded = false\n\n  //duration data\n  let leftYAxisMaxDuration = categories[0].durationTotal\n  let categoriesSortedByDur\n  let categoriesValueDur\n  let xAxisCateogriesLabelDur\n  let categoriesPercentDur\n\n  let option = {\n    tooltip: {\n      trigger: 'axis',\n      axisPointer: {\n        type: 'cross',\n        crossStyle: {\n          color: '#999'\n        }\n      }\n    },\n    grid: {\n      top: 80\n    },\n    toolbox: {\n      feature: {\n        myTool1: {\n          show: false,\n          title: 'back',\n          icon: 'image://public/plugins/smart-factory-pareto-reason-codes-bar-chart-panel/images/back.png',\n          onclick: () => {\n            option.toolbox.feature.myTool1.show = false\n            option.legend.data[0] = 'Categories'\n            option.series[0].name = 'Categories'\n            option.xAxis[0].name = ''\n            if (!isDurationMode) {\n              //load frequency data\n              option.series[0].data = categoriesValue\n              option.xAxis[0].data = xAxisCateogriesLabel\n              option.series[1].data = categoriesPercent\n              option.yAxis[0].max = leftYAxisMax \n            }else {\n              //load duration data\n              option.series[0].data = categoriesValueDur\n              option.xAxis[0].data = xAxisCateogriesLabelDur\n              option.series[1].data = categoriesPercentDur\n              option.yAxis[0].max = leftYAxisMaxDuration\n            }\n\n            myChart.setOption(option)\n          }\n        },\n        myTool2: {\n          title: 'duration',\n          icon: 'image://public/plugins/smart-factory-pareto-reason-codes-bar-chart-panel/images/switch.png',\n          onclick: () => {\n            option.legend.data[0] = 'Categories'\n            option.series[0].name = 'Categories'\n            option.xAxis[0].name = ''\n            option.toolbox.feature.myTool1.show = false\n\n            if (!isDurationMode) {\n              option.toolbox.feature.myTool2.title = 'frequency of occurrence'\n              option.yAxis[0].name = 'Duration (Hours)'\n\n              if (!isDurationDataLoaded) {\n                categoriesSortedByDur = dp.sortMax(categories, 'duration')\n                categoriesValueDur = dp.filterItems(categoriesSortedByDur, 'duration')\n                xAxisCateogriesLabelDur = dp.filterItems(categoriesSortedByDur, 'name')\n                categoriesPercentDur = dp.filterItems(categoriesSortedByDur, 'dur-p')\n                categoriesPercentDur = dp.accumulatePercentages(categoriesPercentDur)\n                isDurationDataLoaded = true\n              }\n\n              option.series[0].data = categoriesValueDur\n              option.xAxis[0].data = xAxisCateogriesLabelDur\n              option.series[1].data = categoriesPercentDur\n              option.yAxis[0].max = leftYAxisMaxDuration\n\n              isDurationMode = true\n            }else {\n              option.toolbox.feature.myTool2.title = 'duration'\n              option.yAxis[0].name = 'Frequency (Times)'\n\n              option.series[0].data = categoriesValue\n              option.xAxis[0].data = xAxisCateogriesLabel\n              option.series[1].data = categoriesPercent\n              option.yAxis[0].max = leftYAxisMax\n  \n              isDurationMode = false\n            }\n\n            myChart.setOption(option)\n          }\n        },\n        saveAsImage: { \n          show: true,\n          title: 'save as image'\n        }\n      },\n      right: 42,\n    },\n    legend: {\n      data: ['Categories','Accumulation Curve']\n    },\n    xAxis: [\n      {\n        type: 'category',\n        data: xAxisCateogriesLabel,\n        nameLocation: 'center',\n        nameGap: 30,\n        axisPointer: {\n          type: 'shadow'\n        }\n      }\n    ],\n    yAxis: [\n      {\n        type: 'value',\n        name: 'Frequency (Times)',\n        min: 0,\n        max: leftYAxisMax,\n        minInterval: 1,\n        axisLabel: {\n          formatter: '{value}'\n        },\n        splitLine: {\n          show: false\n        }\n      },\n      {\n        type: 'value',\n        name: 'Percent',\n        min: 0,\n        max: 100,\n        // interval: 10,\n        axisLabel: {\n          formatter: '{value} %'\n        },\n        // splitLine: {\n        //   show: false\n        // }\n      }\n    ],\n    series: [\n      {\n        name: 'Categories',\n        type: 'bar',\n        data: categoriesValue\n      },\n      {\n        name: 'Accumulation Curve',\n        type: 'line',\n        yAxisIndex: 1,\n        data: categoriesPercent,\n        label: {\n          show: true,\n          formatter: p => p.data === 100 ? '' : p.data + '%'\n        }\n      }\n    ]\n  }\n\n  return option\n}\n\nexport function checkIsDurationMode() {\n  return isDurationMode\n}\n"]}